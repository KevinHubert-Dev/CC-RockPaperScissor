!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const o=0,r=1,s={ROCK:0,PAPER:1,SCISSOR:2},a=0,c=1,i=2,l=e=>{switch(e){case s.ROCK:return"far fa-hand-rock";case s.PAPER:return"far fa-hand-paper";case s.SCISSOR:return"far fa-hand-scissors";default:return}},u=[[s.ROCK,s.ROCK,a,"Both chose rock"],[s.PAPER,s.PAPER,a,"Both chose paper"],[s.SCISSOR,s.SCISSOR,a,"Both chose scissor"],[s.PAPER,s.ROCK,c,"Paper wraps up rock"],[s.ROCK,s.SCISSOR,c,"Rock grids scissor"],[s.SCISSOR,s.PAPER,c,"Scissor cuts paper"],[s.ROCK,s.PAPER,i,"Paper wraps up rock"],[s.SCISSOR,s.ROCK,i,"Rock grids scissor"],[s.PAPER,s.SCISSOR,i,"Scissor cuts paper"]],d=()=>((e=0,t=1)=>{if(e>t)throw Error("min should be less or equal to max");return Math.floor(Math.random()*(t-e+1))+e})(0,Object.keys(s).length-1),p=(e,t)=>{const n=u.find(n=>n[0]===e&&n[1]===t);if(!n)throw Error(`No combination found for player1Choice(${e}) and player2Choice(${t}) `);return{winner:n[2],explaination:n[3]}};function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),o.forEach(function(t){b(e,t,n[t])})}return e}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const f={humanVsBot:{humanChoice:void 0,botChoice:void 0,result:void 0},botVsBot:{bot1Choice:void 0,bot2Choice:void 0,result:void 0}},B=(e=f,t)=>{switch(t.type){case"HUMAN_CHOICE_CHANGED":{const n=d(),r=p(t.choice,n);return h({},e,{humanVsBot:{humanChoice:t.choice,botChoice:n},lastResult:h({},r,{type:o})})}case"BVB_RANDOM_CHOICES":{const t=d(),n=d();return h({},e,{botVsBot:{bot1Choice:t,bot2Choice:n},lastResult:h({},p(t,n),{type:r})})}default:return e}};function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),o.forEach(function(t){y(e,t,n[t])})}return e}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const C={botVsBot:{bot1:0,bot2:0,draw:0},humanVsBot:{human:0,bot:0,draw:0}},w=(e=C,t)=>{switch(t.type){case"INCR_HVB_DRAW":return m({},e,{humanVsBot:m({},e.humanVsBot,{draw:e.humanVsBot.draw+1})});case"INCR_HVB_HUMAN_POINT":return m({},e,{humanVsBot:m({},e.humanVsBot,{human:e.humanVsBot.human+1})});case"INCR_HVB_BOT_POINT":return m({},e,{humanVsBot:m({},e.humanVsBot,{bot:e.humanVsBot.bot+1})});case"INCR_BVB_DRAW":return m({},e,{botVsBot:m({},e.botVsBot,{draw:e.botVsBot.draw+1})});case"INCR_BVB_BOT1_POINT":return m({},e,{botVsBot:m({},e.botVsBot,{bot1:e.botVsBot.bot1+1})});case"INCR_BVB_BOT2_POINT":return m({},e,{botVsBot:m({},e.botVsBot,{bot2:e.botVsBot.bot2+1})});case"INCR_BVB_DRAW":return m({},e,{botVsBot:m({},e.botVsBot,{draw:e.botVsBot.draw+1})});case"RESET_SCORE":return m({},e,{botVsBot:{bot1:0,bot2:0,draw:0},humanVsBot:{human:0,bot:0,draw:0}});default:return e}};const R=function(e){let t,n=[];return{getState:()=>t,dispatch:o=>{console.log("Redux-state",t),t=e(t,o),console.log("Following listeners will be called",n),n.forEach(e=>e())},subscribe:e=>{console.log("Subscriber added",e),n.push(e)},unsubscribe:e=>{n=n.filter(t=>t!==e)}}}((e={},t)=>{return{score:w(e.score,t),game:B(e.game,t)}});R.dispatch({});const O=e=>{R.dispatch({type:"HUMAN_CHOICE_CHANGED",choice:e});const t=R.getState().game.lastResult.winner;switch(t){case 0:R.dispatch({type:"INCR_HVB_DRAW"});break;case 1:R.dispatch({type:"INCR_HVB_HUMAN_POINT"});break;case 2:R.dispatch({type:"INCR_HVB_BOT_POINT"});break;default:throw Error("Unknown winner option. Expected 0-2 instead got",t)}},S=function(e){this.element=e};S.prototype.render=function(){this.element.innerHTML="\n    <div class='flexContainer'>\n      <button class='flex-1' id='rockBtn' type='button'><i class=\"far fa-hand-rock\"></i><p>Rock</p></button>\n      <button class='flex-1' id='paperBtn' type='button'><i class=\"far fa-hand-paper\"></i><p>Paper</p></button>\n      <button class='flex-1' id='scissorBtn' type='button'><i class=\"far fa-hand-scissors\"></i><p>Scissor</p></button>\n      <button class='flex-1' id='randomBtn' type='button'><i class=\"fas fa-robot\"></i><p>PC vs. PC</p></button>\n      <button class='flex-1' id='resetScoreBtn' type='button'><i class=\"fas fa-undo\"></i><p>Reset Score</p></button>\n    </div>\n    "},S.prototype.init=function(){this.render(),this.element.querySelector("#resetScoreBtn").addEventListener("click",()=>{console.log("resetScoreBtn clicked"),R.dispatch({type:"RESET_SCORE"})}),this.element.querySelector("#scissorBtn").addEventListener("click",()=>{console.log("scissorBtn clicked"),O(s.SCISSOR)}),this.element.querySelector("#rockBtn").addEventListener("click",()=>{console.log("rockBtn clicked"),O(s.ROCK)}),this.element.querySelector("#paperBtn").addEventListener("click",()=>{console.log("paperBtn clicked"),O(s.PAPER)}),this.element.querySelector("#randomBtn").addEventListener("click",()=>{console.log("randomBtn clicked"),(()=>{R.dispatch({type:"BVB_RANDOM_CHOICES"});const e=R.getState().game.lastResult.winner;switch(e){case 0:R.dispatch({type:"INCR_BVB_DRAW"});break;case 1:R.dispatch({type:"INCR_BVB_BOT1_POINT"});break;case 2:R.dispatch({type:"INCR_BVB_BOT2_POINT"});break;default:throw Error("Unknown winner option. Expected 0-2 instead got",e)}})()})},new S(document.getElementById("menu")).init();const g=function(e){this.element=e,R.subscribe(()=>{this.render(R.getState())})};g.prototype.render=function({score:e}){const{humanVsBot:t,botVsBot:n}=e;console.log("scoreComponentRender called"),this.element.innerHTML=`\n    <h2 class='textCenter'>Score</h2>\n    <div>\n        <div>\n            <h4>You\n                <span class='game-scoring'> ${t.human} : ${t.bot} </span>\n                <i class="fas fa-robot" style='color: #00897B'></i>\n            </h4>\n            <h5 class='textCenter'>(Draws ${t.draw})</h5>\n        </div>\n        <div>\n            <h4>\n                <i class="fas fa-robot" style='color: #426FC5'></i>\n                <span class='game-scoring'> ${n.bot1} : ${n.bot2} </span>\n                <i class="fas fa-robot" style='color: #00897B'></i>\n            </h4>\n            <h5 class='textCenter'>(Draws ${n.draw})</h5>\n        </div>\n    </div>\n  `},g.prototype.init=function(){this.render(R.getState())};const V=function(e){this.element=e,R.subscribe(()=>{this.render(R.getState())})};V.prototype.renderChoice=function(e,t){return`<div class="choicebox horizontal-mirrored">\n                <i class="${l(e)}"></i>\n            </div>\n            <div class="choicebox">\n                <i class="${l(t)}"></i>\n            </div>`},V.prototype.renderResultExplainationAlternative=function(e){return`\n      <h2 class='textCenter'>${e.type===o?0===e.winner?"Draw":1===e.winner?"You won":"You lost":0===e.winner?"Draw":1===e.winner?"Bot 1 won":"Bot 2 won"}\n      </h2>\n    <h3 class='textCenter'>${e.explaination}</h3>\n  `},V.prototype.renderResultExplaination=function(e){let t="";if(e.type===o)switch(e.winner){case 0:t="Draw";break;case 1:t="You won";break;case 2:t="You lost";break;default:throw Error(`Unexpected value(${e.winner}) for variable lastResult.winner`)}else switch(e.winner){case 0:t="Draw";break;case 1:t="Bot 1 won";break;case 2:t="Bot 2 won";break;default:throw Error(`Unexpected value(${e.winner}) for variable lastResult.winner`)}return`\n    <h2 class='textCenter'>${t}</h2>\n    <h3 class='textCenter'>${e.explaination}</h3>\n  `},V.prototype.render=function({game:e}){e.lastResult?this.element.innerHTML=`\n            <div class='gameArea'>\n            ${e.lastResult.type===o?this.renderChoice(e.humanVsBot.humanChoice,e.humanVsBot.botChoice):this.renderChoice(e.botVsBot.bot1Choice,e.botVsBot.bot2Choice)}\n            </div>\n            ${this.renderResultExplaination(e.lastResult)}\n        `:this.element.innerHTML='<p class="noGamePlayerYet">No game played yet</p>'},V.prototype.init=function(){this.render(R.getState())},new S(document.getElementById("menu")).init(),new g(document.getElementById("score")).init(),new V(document.getElementById("game")).init()}]);